{"meta":{"title":"Never的个人博客","subtitle":"经验 分享-【Never的个人博客】","description":"这是我的个人博客，我会在这里分享一些技术性的东西，包括我自己的一下经验，或许以后会增加一下生活类的分享吧。","author":"Never","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2020-03-07T09:45:33.865Z","updated":"2020-03-07T09:45:33.865Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-03-07T09:44:01.604Z","updated":"2020-03-07T09:44:01.604Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"解决远程软件无法连接到谷歌服务器的问题","slug":"远程软件如歌连接谷歌服务器","date":"2020-05-10T11:54:32.000Z","updated":"2020-05-10T12:18:20.831Z","comments":true,"path":"posts/929dbc5e.html","link":"","permalink":"http://yoursite.com/posts/929dbc5e.html","excerpt":"刚搭建好的谷歌服务器，通过远程软件连接可能会提示报错。The client has disconnected from the server.Reason: Unable to authenticate using any of the configured authentication methods.那么如何解决呢。下面小编就带大家解决这个问题。hhhhhhhhhh一开口就知道老营销号了。","text":"刚搭建好的谷歌服务器，通过远程软件连接可能会提示报错。The client has disconnected from the server.Reason: Unable to authenticate using any of the configured authentication methods.那么如何解决呢。下面小编就带大家解决这个问题。hhhhhhhhhh一开口就知道老营销号了。 1.给root用户设置密码打开谷歌浏览器自带的管理面板，输入命令：1.切换至管理员 1sudo -i 2.设置密码 1passwd 2.开启SSH权限1.编辑SSH配置文件/etc/ssh/sshd_config 1vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config 2.修改下面两项 12PermitRootLogin yes &#x2F;&#x2F;默认为no，需要开启root用户访问改为yesPasswordAuthentication yes &#x2F;&#x2F;默认为no，改为yes开启密码登陆 然后就可以通过远程软件连接了","categories":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"},{"name":"心得","slug":"心得","permalink":"http://yoursite.com/categories/%E5%BF%83%E5%BE%97/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"},{"name":"心得","slug":"心得","permalink":"http://yoursite.com/tags/%E5%BF%83%E5%BE%97/"}]},{"title":"linux学习笔记(1)-系统分区结构","slug":"linux学习笔记(1)","date":"2020-05-05T08:38:32.000Z","updated":"2020-05-10T12:14:19.001Z","comments":true,"path":"posts/85489a28.html","link":"","permalink":"http://yoursite.com/posts/85489a28.html","excerpt":"linux的学习笔记(1)系统分区结构","text":"linux的学习笔记(1)系统分区结构 一、系统分区，也叫磁盘分区。分区类型1.主分区：最多四个2.扩展分区1.最多一个2.主分区加扩展分区最多有四个3.不能写入数据，只能包含逻辑分区 逻辑分区分区结构描述假如有1234四个主分区则我若想扩展出第五个分区需要将一个分区变为扩展分区变成123+扩展分区的结构而扩展分区中可以扩展出56789等等分区注意:就算主分区不够4个，扩展的逻辑分区也是从第五个开始 二、格式化高级格式化格式化（高级格式化）又称逻辑格式化，它是指根据用户选定的文件系统（如FAT16、FAT32、NTFS、EXT2、EXT3、EXT4等），在磁盘的特定区域写入特定数据，在分区中划出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间。linux使用的是ext4. 三、硬件设备文件名 硬件 设备文件名 IDE硬盘 /dev/hd[a-d] SCSI/SATA/USB硬盘 dev/sd [a-p] 光驱 /dev/ cdrom或/dev/sr0 软盘 /dev/fd[O-11] 打印机（25针） /dev/lp[o-2] 打印机（USB） /dev/usb/lp[0-15] 鼠标 /dev/mouse 分区设备文件名（硬盘中的分区显示） 文件名 :—: /dev/hdal dev/sal SCSI硬盘接口、SATA硬盘接口 分区文件名就是在硬盘后边直接加数字 sa1，hda1只是接口不同 四、挂载必须分区“/“ 根分区“swap” 交换分区，内存2倍，不超过2GB 推荐分区“/boot” 启动分区，200MB 文件系统结构","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"心得","slug":"心得","permalink":"http://yoursite.com/tags/%E5%BF%83%E5%BE%97/"},{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"如何给你的博客配置ssl证书","slug":"如何给你的博客配置ssl证书","date":"2020-03-27T08:38:32.000Z","updated":"2020-04-07T12:31:03.599Z","comments":true,"path":"posts/da577fa8.html","link":"","permalink":"http://yoursite.com/posts/da577fa8.html","excerpt":"在我们的博客搭建好了之后呢，通过域名访问会提示不安全，那么怎么解决这个问题呢。我们可以通过对我们的域名申请ssl证书来解决。还是以视频为主，这个文字更多的是一些用到的指令的罗列吧。","text":"在我们的博客搭建好了之后呢，通过域名访问会提示不安全，那么怎么解决这个问题呢。我们可以通过对我们的域名申请ssl证书来解决。还是以视频为主，这个文字更多的是一些用到的指令的罗列吧。 在开始之前我们要保证etc/ssl目录存在，用于保存我们的私钥和证书文件。 没有则新建目录etc/ssl 1mkdir etc&#x2F;ssl 编辑nginx的配置文件 1vim &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf 需要调整以下参数或者直接应用配置文件中的模板，依次对照进行修改。 注意 更改项前面的井号需要去除，井号代表注释，被注释的代码讲不会生效。 12345678910111213141516171819202122232425262728http&#123; #http节点中可以添加多个server节点 server&#123; #监听443端口 listen 443; server_name 你的域名; ssl on; ssl_certificate &#x2F;etc&#x2F;ssl&#x2F;1.crt.pem; ssl_certificate_key &#x2F;etc&#x2F;ssl&#x2F;1.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on; #这是我的主页访问地址，因为使用的是静态的html网页，所以直接使用location就可以完成了。 location &#x2F; &#123; #文件夹 root &#x2F;usr&#x2F;local&#x2F;service&#x2F;ROOT; #主页文件 index index.html; &#125; &#125; server&#123; listen 80; server_name 你的域名; rewrite ^&#x2F;(.*)$ https:&#x2F;&#x2F;你的域名:443&#x2F;$1 permanent; &#125;&#125; 每次更改配置文件都需要重启nginx服务。此时会报错，没关系，正常现象。 1service nginx restart 此时会报错，没关系，正常现象。先保证nginx服务关闭。输入代码关闭服务。 1service nginx stop 查看一下是不是真的关闭了，执行以下指令。 1netstat -lnpt 如果返回的数据中没有 80 和 443两个数字 则为关闭成功。 我们需要安装ssl模块。 如果之前ngxin的压缩包还在，那最好，不在了也没关系。我们重新下载对应版本的压缩包。 查询版本 1&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -V 去官网找到下载连接，进入/usr/local路径 使用指令 123wget 下载链接 下载并且解压（解压指令 tar -xvf 压缩包全名） 进入解压后的文件夹路径执行指令 12345.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_modulemake 如果报错，按照我之前教程走的话这里不会报错，因为这个依赖我们安装了。报错的话执行下面的，不报错就算了， 1yum -y install openssl openssl-devel 继续执行下面的指令。将nginx启动文件覆盖。第一条指令是备份， 12345cp &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx.bakcp objs&#x2F;nginx &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx 最后我们启动服务 1service nginx start 查看监听端口 1netstat -lnpt 如果出现80 和 443端口则为成功 最后一定要去阿里云的安全组开放443端口，操作和开放80端口方法是一样的。","categories":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/tags/Blog/"},{"name":"ssl证书","slug":"ssl证书","permalink":"http://yoursite.com/tags/ssl%E8%AF%81%E4%B9%A6/"},{"name":"https","slug":"https","permalink":"http://yoursite.com/tags/https/"}]},{"title":"如何将博客部署到云服务器","slug":"如何将博客部署到云服务器","date":"2020-03-21T08:38:32.000Z","updated":"2020-04-07T12:30:37.270Z","comments":true,"path":"posts/2092ec56.html","link":"","permalink":"http://yoursite.com/posts/2092ec56.html","excerpt":"经过我的一番研究，终于成功将博客部署的自己的服务器而不是依赖于github或者gite了，现在来一期域名购买到服务器配置到博客部署的教程。目前用的是阿里云。","text":"经过我的一番研究，终于成功将博客部署的自己的服务器而不是依赖于github或者gite了，现在来一期域名购买到服务器配置到博客部署的教程。目前用的是阿里云。 视频教程 1.安装nginx安装ngin需要相关的依赖库，我们先进行库的安装。 1.1安装gcc gcc-c++123yum install -y gcc gcc-c++ 1.2安装PCRE库123456789101112131415cd &#x2F;usr&#x2F;local&#x2F;wget http:&#x2F;&#x2F;downloads.sourceforge.net&#x2F;project&#x2F;pcre&#x2F;pcre&#x2F;8.37&#x2F;pcre-8.37.tar.gztar -xvf pcre-8.37.tar.gzcd pcre-8.37.&#x2F;configuremake &amp;&amp; make installpcre-config --version 1.3安装 openssl 、zlib 、 gcc 依赖123yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel 1.4安装nginx安装nginx一定要在local文件夹下 12345678910111213cd &#x2F;usr&#x2F;local&#x2F;wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.17.9.tar.gztar -xvf nginx-1.17.9.tar.gzcd nginx-1.17.9.&#x2F;configuremake &amp;&amp; make install 修改配置文件server 80 端口下的root项 为/home/www/website; 2.安装Git以及Node.js2.1安装Node.js12345curl -sL https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_10.x | bash -yum install -y nodejs 查看是否成功 12345node -vnpm -v 可以显示版本号即为成功 2.2安装Git及配置仓库安装git及新建git用户 123456789yum install gitadduser gitchmod 740 &#x2F;etc&#x2F;sudoersvi &#x2F;etc&#x2F;sudoers 在如下位置添加git ALL=(ALL) ALLvi指令执行之后按i进入输入模式编辑完成之后按一下esc然后输入:wq即可退出 执行以下指令更改文件夹权限 12345chmod 400 &#x2F;etc&#x2F;sudoerssudo passwd git 切换git用户并且建立密钥 123456789101112131415su gitcd ~mkdir .sshcd .sshvi authorized_keyschmod 600 ~&#x2F;.ssh&#x2F;authorized_keyschmod 700 ~&#x2F;.ssh 创建git仓库 1234567cd ~git init --bare blog.gitvi ~&#x2F;blog.git&#x2F;hooks&#x2F;post-receive 输入 1git --work-tree&#x3D;&#x2F;home&#x2F;www&#x2F;website --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;blog.git checkout -f 保存退出 12chmod +x ~&#x2F;blog.git&#x2F;hooks&#x2F;post-receive *以上指令都需要在su git 之后执行 如果中途断开重新连接过，需要重新执行 su git指令 进入git账户。 新建/home/www/website文件夹在root用户下执行，所限先su root切换为root账户 12345678910111213141516171819su root输入密码cd &#x2F;homemkdir wwwcd wwwmkdir website修改文件夹权限 这步很重要 视频中没有提及chmod 777 &#x2F;home&#x2F;www&#x2F;websitechmod 777 &#x2F;home&#x2F;www 在本地电脑输入 123ssh -v git@服务器的公网ip 返回如下则成功。 修改本地配置文件 repo: git@这里改为服务器公网IP:/home/git/blog.git 写入启动脚本在/etc/init.d/路径下添加脚本文件，名称为nginx，内容如下 1234567891011121314151617181920212223242526272829303132333435#!&#x2F;bin&#x2F;bash#Startup script for the nginx Web Server#chkconfig: 2345 85 15nginx&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginxconf&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.confcase $1 in start)echo -n &quot;Starting Nginx&quot;$nginx -c $confecho &quot; done.&quot;;;stop)echo -n &quot;Stopping Nginx&quot;killall -9 nginxecho &quot; done.&quot;;;test)$nginx -t -c $confecho &quot;Success.&quot;;;reload)echo -n &quot;Reloading Nginx&quot;ps auxww | grep nginx | grep master | awk &#39;&#123;print $2&#125;&#39; | xargs kill -HUPecho &quot; done.&quot;;;restart)$nginx -s reloadecho &quot;reload done.&quot;;;*)echo &quot;Usage: $0 &#123;start|restart|reload|stop|test|show&#125;&quot;;;esac 然后执行 1chmod +x nginx 控制指令启动service nginx start停止service nginx stop重启service nginx reload 后续有问题可以在视频下留言大家一起讨论问题解决部署时候一直输入密码报错Can’t open /dev/tty: No such device or address Error (Linux)解决办法 由于之前的线上服务器替换过ip地址，导致线下服务器crontab在拉取备份日志时日志里记录了如下问题 注意：查找服务器端问题一定要查看日志，不能靠猜，例如ssh的问题可以多加-vvv参数来具体排查问题 原因线上服务器进行了ip地址的修改，开始出现Host key verification failed的时候，以为删除自己的know_hosts文件即可，但是没有解决本质问题，所以察看日志很重要 解决方法 12345mknod -m 644 &#x2F;dev&#x2F;tty c 5 0chmod o+rw &#x2F;dev&#x2F;tty 公私钥认证解决了上面的问题，发现之前由于不清楚原因搞乱了.ssh目录的权限，无法公私钥认证登陆，这里记录一下权限设置： ~/.ssh目录的权限必须是0700~/.ssh/authorized_keys文件权限必须是0600 12345chmod 600 ~&#x2F;.ssh&#x2F;authorized_keyschmod 700 ~&#x2F;.ssh","categories":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/tags/Blog/"},{"name":"阿里云","slug":"阿里云","permalink":"http://yoursite.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"}]},{"title":"从零带你搭建代理服务器","slug":"从零带你搭建代理服务器","date":"2020-03-12T00:28:32.000Z","updated":"2020-05-10T14:19:12.867Z","comments":true,"path":"posts/863d901e.html","link":"","permalink":"http://yoursite.com/posts/863d901e.html","excerpt":"之前也是应邀答应做一期搭建代理服务器的教程，现在也算是有一点时间了。我在这里呢，打算分为两个部分讲解，第一部分呢，是一些基础知识和原理的一些说明。这样一方面呢，可以让你出现问题更好的排查。另一方面呢，可以让你在更换其他的方法之后可以更快的上手。因为现在的这个技术发展是非常快的。好的，我们开始正题。","text":"之前也是应邀答应做一期搭建代理服务器的教程，现在也算是有一点时间了。我在这里呢，打算分为两个部分讲解，第一部分呢，是一些基础知识和原理的一些说明。这样一方面呢，可以让你出现问题更好的排查。另一方面呢，可以让你在更换其他的方法之后可以更快的上手。因为现在的这个技术发展是非常快的。好的，我们开始正题。 在翻墙的过程中发表不当言论真的会被查水表，这不是危言耸听，很多的案例也不难打听，大家谨言慎行。切记不可涉政，不可造谣传谣。1.背景知识及基本原理1.1什么是linuxlinux简要的来说呢，就是一个操作系统。像是我们平常接触到的有windows操作系统，还有mac操作系统，Linux也是一样的，它也是一个操作系统。只是这个操作系统呢稍微有一点不一样。它的所有执行不像我们的其他操作系统一样是窗口化的，而是要全部通过指令来执行。而你得到的回馈也会是指令形式。当然并不是说里面是没有图形化的操系统，很多的人呢，也会在inux中安装一些图形化的插件。 但是一般不会这么做，因为使用命令的形式更为直观和稳定。现在呢，Linux有很多的发行版本，像是centos,debian,ubuntu。其实他们本质上并没有什么太大的区别，用什么都一样，但是呢，可能里面有些指令，包括他们的不同版本的更新会使这个系统的特性有些区别。而我们再安装程序的时候不同的版本可能会有细微差别。Linux操作系统最大的应用，就是在服务器的搭建上。基本上现在很多的服务器全都是基于Linux系统的。 1.2什么是服务器简单的来说啊，服务器就是一个计算机。只是这个计算机呢，由运营商来提供24小时不间断的运行。为什么要这样做呢？因为我们呀，比如像是在搭建网站的时候，需要一直保证我们的数据可以被别人浏览。那么我们就需要一直提供我们的数据。如果这些数据存在自己的电脑上，那你的电脑就要一直开着，来供给别人下载。这样显然是不现实的。所以呢，我们就需要把我们的所有数据都储存到服务器上。而这些服务器它是24小时工作的。一般呢，这些服务器我们是接触不到的，他在离我们很远的地方。所以这个时候我们就需要用远程的管理工具来控制我们的服务器。 1.3域名和服务器的ip地址当我们压在运营商那边购买了一个服务器之后，它呢一般会自动给你搭建好linux系统。而我们要想去访问这个，你每次操作系统就必须要知道他的地址是什么。而这个地址就是ip，形如192.168.1.1。当我们知道了服务器的ip之后，在浏览器直接输入这个域名就可以访问我们的服务器，如果服务器上搭建了一个网站，那么就会显示这个网站。由于ip数字太长了。不方便人们记忆。所以这个时候呢域名就出现了，形如www.baidu.com我们把域名和ip绑定的过程称为域名解析。实际上域名又分为一级域名和二级域名等等。那么一级域名和二级域名有什么区别呢。我们从域名的发行商购买了一个域名之后会是这样的，比如yuming.com。这就是一个一级域名，然后呢我们可以对这个一级域名进行操作，调用出一个二级域名，比如aa.yuming.com这时候我们就多了一个域名可以使用。 1.4通过服务器实现境外访问及技术发展史具体原理我不在详细讲解，讲深了你们听不懂，讲浅了，又没意思，讲的更深呢，我又不会。可以简单理想象成，我们在境外的服务通过软件和我们本地连接然后我们就可以绕过GFW（中国长城防火墙）。而最早呢很多人使用ss这个软件，后来源码被竞争对手泄露，导致流量特征被完全识别，而后出现了ssr，这两个其实都差不多，作者都被请去喝茶，所以目前由爱好者在github上进行维护，ssr主要是基于socks5。但是由于近期gwf升级ssr的流量特征也已经被识别再次使用ssr的话会直接导致服务器的ip或者端口被封掉，而且封禁速度很快，甚至导致很多机场全部挂掉。后来啊出现了v2ray，在ssr基础上出现了加密 协议 混淆，更加难以被识别，但是我个人使用的时候出现了阻断，使用一会会被限流。所以后来我使用了WS+TLS+DNSSEC的方法，在配置域名和证书之后可以是流量模拟为正常访问网站。这种方法也是目前最稳的方法，而软件方面则使用了trojan。 2.前期准备及相关软件介绍2.1服务器的选择购买和配置服务器也叫vps。我在这里使用的是vultr提供的服务器，因为他在ip被墙之后可以把服务器删除重新搭建，然后分配新的ip。市面上还有很多的vps是不能更换ip的，买完了就定了，像是搬瓦工用的也是比较多。1.打开vultr官网进行注册登录登录之后呢页面如下然后需要向账户充值10美元之后服务器的费用从其中扣除，支持支付宝。2.充值完成之后点击右上角加号，进入新建服务器界面。 这里需要注意第二步选择是服务器的位置，目前美国的基本上都被封了。选择日本的我在天津用联通的网，网络状况良好。然后等待服务器搭建好了就可以了。现在呢，我们获得了一个服务器，并且安装了linux操作系统，我们需要连接上这个服务器。这里需要点进去服务器记下ip和密码之后我们在本地电脑输入win+r，在弹出的框框中输入cmd，在cmd中输入以下指令 1ping 你刚才服务器的ip 如果返回不是请求超时就说明可以。返回是请求超时说明这个ip被墙了。需要重复第2步新建服务器。我这样就是被墙了。我在新建一个，注意新建的时候不要删除当前的，因为可能新建还会被分配到当前ip，等新建完了在删除当前的，删除之后就不扣费了。注意注意注意，有的国家的服务器比较便宜，但是只支持ipv6，所以不能购买！！！！注意注意注意，有的国家的服务器比较便宜，但是只支持ipv6，所以不能购买！！！！注意注意注意，有的国家的服务器比较便宜，但是只支持ipv6，所以不能购买！！！！好，成功了 2.2域名的购买我这里用的是godaddy这个网站。支持支付宝便宜的域名9快钱一年，需要续费的话重新购买就行了，也可以找一些免费的域名网站，我不做过多介绍了，这个域名解析做起来比较简单。其他的呢你们可以自己做域名解析也可以，百度都有教程。购买完成之后呢到这个界面选择管理dns在记录页面的右下角点击添加，设置如图。这样域名解析完毕。我们测试一下。打开cmd输入 1ping 你刚买的域名 返回时有返回值且域名后面跟这你的服务器ip则成功，这里我们在建立一个二级域名，在搭建梯子的时候使用二级域名。还是在这里选择添加 最后的二级域名就是haha.你自己买的域名 好，到这里我们的域名配置也完成。下面我们进行连接服务器。 2.3服务器的连接这里我们在我们的本地电脑需要借助一个软件SecureCRT具体怎么安装和破解我就不过多介绍了，我在网上随便找了个教程。打开securecrt点击快速连接之后点击同意然后输入密码并保存密码登录成功。 2.4通过远程连接在服务器上利用脚本搭建代理SecureCRT连接好之后呢我们在SecureCRT中输入以下代码（SecureCRT中粘贴是右键，不是ctrl+v）如果发现不能删除东西访问SecureCRT Backspace/delete 键失效的解决方法 SecureCRT如果长时间不输入会断开连接，无法输入东西，重新连接一下就好了。 2.4.1安装 wget 我们用的debian，选择第一个12apt-get install wget ##Debian Ubuntu 安装 wgetyum -y install wget ##ContOS Yum 安装 wget 2.4.2安装脚本，输入指令1wget -N --no-check-certificate -q -O trojan_install.sh &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;V2RaySSR&#x2F;Trojan&#x2F;master&#x2F;trojan_install.sh&quot; &amp;&amp; chmod +x trojan_install.sh &amp;&amp; bash trojan_install.sh 在这里也是对脚本制作的大佬们致敬啊。注意这里内容一个空格都不能多输入，不然会出错。注意这里内容一个空格都不能多输入，不然会出错。注意这里内容一个空格都不能多输入，不然会出错。 如果哪里出现错误，重新执行第2.4.2步脚本即可。 随后按照内容提示走，选择1按回车。（安装throjan） 提示输入域名，则输入你的二级域名 等待成功（如果提示证书申请失败的话则需要在第2.4.2部输入指令之后选择3修复证书，切记不要频繁操作，每个域名每天可以申请证书的次数有限。） 成功之后提示如图我们要将里面的内容全部复制下来。保存好。一定要保存好 随后我们再次执行上面第2.4.2步的脚本指令。这次输入4按回车（安装加速）选择2（安装bbrplas内核） 弹出的蓝色界面选择no 提示是否重启vps选择y 等待重启之后远程软件重新连接再次运行2.4.2的安装脚本还是选择4然后选择7（使用bbrplas加速） 好，到这里梯子就搭好了 修改梯子密码（不懂不要乱改，本地的和服务器上的密码都要对应更改）用vi指令打开打开/usr/src/trojan/server.conf修改密码 修改之后通过指令查看监听端口 123netstat -lnptkill -HUP 端口号 #使配置文件更改生效，指令严格区分大小写 怎么使用梯子翻墙1.电脑用户 第一步 找到之前上面保存好的连接中的这个连接，并访问 Windows客户端下载：。。。。。。 MacOS客户端下载：。。。。。。。下载下来的压缩包 解压之后 找到start 然后双击他 注意 现在进程在后台已经开始运行了 看不见没关系 注意 注意 注意 以后每次翻墙都要先运行这个start 第二部 打开v2rayn v2ray win端下载地址 https://github.com/2dust/v2rayN/releases 打开后点击assets 下载v2rayN-Core.zip 解压后直接运行v2rayN.exe mac端下载地址 https://github.com/yanue/V2rayU/releases 打开后点击assets 运行之后呢 还是在上边 服务器 添加socks 地址 127.0.0.1 端口 1080 其他不管 确定 右键点击电脑右下角的v2ray图标 选择http代理→开启pac并自动配置pac 右键点击电脑右下角的v2ray图标 选择服务器→刚才添加进的服务器（应该只有一个） 成功了 2.手机用户 打开 https://github.com/trojan-gfw/igniter/releases 打开后点击assets 下载app-debug.apk 安装 打开软件 第一行填写 你自己的二级域名 第二行填写443 第三行填写一个密码 密码在上面电脑配置的压缩包中解压后找到config文件里password一项 关掉enable ipv6 关掉 verify certificate 打开bypass那个 点击start 成功 提示访问世界网络时 要严守政治纪律和政治规矩。必须牢固树立政治意识、大局意识、核心意识、看齐意识，坚决维护党中央权威，在思想上政治上行动上始终同以习近平同志为核心的党中央保持高度一致。严格遵守党规党纪，模范遵守国家法律法规，在网络行为中坚持正确政治方向，自觉宣传党的理论和路线方针政策，积极践行社会主义核心价值观，传播正能量、弘扬主旋律，共筑网上网下同心圆。 不准参与以下网络传播行为： 发表违背党的基本路线，否定四项基本原则，歪曲党的政策，或者其他有严重政治问题的文章、演说、宣言、声明等；妄议中央大政方针，破坏党的集中统一；丑化党和国家形象，诋毁、污蔑党和国家领导人，歪曲党史、国史、军史，抹黑革命先烈和英雄模范；制造、传播各类谣言特别是政治类谣言，散布所谓“内部”消息和小道消息；出版、购买、传播非法出版物；宣扬封建迷信、淫秽色情；制作、传播其他有严重问题的文章、言论、音视频等信息内容。 要认真贯彻落实《党委（党组）意识形态工作责任制实施办法》以及《党委（党组）形态工作责任制实施细则》。","categories":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"trojan","slug":"trojan","permalink":"http://yoursite.com/tags/trojan/"},{"name":"vpn","slug":"vpn","permalink":"http://yoursite.com/tags/vpn/"},{"name":"翻墙","slug":"翻墙","permalink":"http://yoursite.com/tags/%E7%BF%BB%E5%A2%99/"},{"name":"vultr","slug":"vultr","permalink":"http://yoursite.com/tags/vultr/"},{"name":"ssr","slug":"ssr","permalink":"http://yoursite.com/tags/ssr/"}]},{"title":"从0开始拥有你自己的博客（windows10）","slug":"从0开始拥有你自己的博客","date":"2020-03-09T15:34:32.000Z","updated":"2020-05-10T12:17:45.324Z","comments":true,"path":"posts/5a40952.html","link":"","permalink":"http://yoursite.com/posts/5a40952.html","excerpt":"好了，趁热的博客搭建教程来了，这两天博客的搭建我可算是滚瓜烂熟了，本来从因为之前部署到github上在国内访问比较慢，打算直接部署到服务器上的。结果从阿里云搞了个服务器，弄了一天也没调通。重点是根本不知道哪里出了问题，虽说在服务器上没搞成功，但是博客的搭建却烂熟于心了。","text":"好了，趁热的博客搭建教程来了，这两天博客的搭建我可算是滚瓜烂熟了，本来从因为之前部署到github上在国内访问比较慢，打算直接部署到服务器上的。结果从阿里云搞了个服务器，弄了一天也没调通。重点是根本不知道哪里出了问题，虽说在服务器上没搞成功，但是博客的搭建却烂熟于心了。 视频教程 1.环境的准备1.1服务器环境由于部署到github上，这里就不做介绍服务器相关的了，另外我在说一下部署到gitee上的方法，都差不多的。所以下面注册账号按需求注册，github的服务器在国外，国内访问较慢，可能会出现打不开的情况。gitee在国内，访问比较快。但是每次修改网站重新部署之后都要登录gitee手动同步gitee pages，网站才会修改。 1.1.1github账号的配置1.访问github官网。2.点击右上角注册。 注意这里的用户名最好考虑清楚在填写，以后不可更改且是域名的一部分。 3.输入用户名和密码。注册完成记住账号密码就好了。 4注册成功之后登录到github首页上，点击右上角加号选择新建一个仓库。这里如果你的登录界面不在这里，自行寻找新建仓库。（New repository）。如图操作 创建完成之后是这个界面 点击右上方setting 向下滑动找到github pages 有如下提示则为成功。 github的配置到这里就结束了。 1.1.2gitee账号的配置1.访问gitee(码云)。2.点击右上角注册。 同样，这里的这里的空间域名地址最好考虑清楚在填写，以后不可更改且是域名的一部分。 3.手机或者邮箱注册都可以注册完成记住账号密码就好了。 4.这里与github类似，也是进去先建立一个仓库。 然后直接拉到最下边创建即可 创建成功之后同样复制这个地址待用。我也忘了上传文件之后会不会不显示了。先粘贴下来吧。 gitee的配置也到此结束。 1.2本地环境博客主体基于hexo框架，本地需要安装git环境、以及nodejs。 1.2.1git环境的安装这个很简单，下载一个安装包一路下一步就好了。在这里我放了一个教程，可以参照安装。这个教程还提及了配置ssh密钥的方法（里面的二.环境的配置），这里大家嫌麻烦可以不进行配置，只是后边同步的时候需要输入github的用户名和密码。如果使用的是gitee（码云）的话把公钥添加到这 添加方法实际上就是用记事本打开id_rsa.pub，把里面的内容复制粘贴到github或者gitee上就好了。 1.2.2nodejs的安装1.打开nodejs官网nodejs官网。下载安装一路下一步即可。2检查是否安装win+R输入cmd，打开命令行输入node -v 返回版本号即安装成功输入npm -v 返回版本号即安装成功 2.hexo的安装及博客的部署2.1hexo的安装按win+r弹出的框输入cmd回车弹出命令提示符。输入以下指令回车。 12npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgcnpm install hexo-cli -g 命令提示符默认打开位置在c盘然后我们在自己的其他盘建立个文件夹名字自己取然后输入以下指令（我假设我在d盘建立文件夹名字为123） 12d:cd 123 注意这里 cd命令的作用就是进入某个文件夹。而从c盘到d盘需要不可以直接cd命令需要先输入你的相应盘符加冒号回车。然后使用hexo命令 1hexo init 等待完成。完成提示 1INFO Start blogging with Hexo! 好到了这里呢博客就算是基本搭建完成。我们的博客相关文件都存放在233这个文件夹中。这里介绍一下。 2.2hexo的部署继续用cmd命令提示符，且需要保证在你自己建立的文件夹路径下，我在233文件夹。输入 1hexo s 提示 12INFO Start processingINFO Hexo is running at http:&#x2F;&#x2F;localhost:4000 . Press Ctrl+C to stop. 在浏览器打开提示的 1http:&#x2F;&#x2F;localhost:4000 就可以访问博客了，这个是他默认带的一篇博客，之后需要自己再去编写。 那么如何把这个默认的墨客部署到github上让别人访问呢。首先我们打开233文件夹中的_config.yml这个文件。这里呢打开这个文件用记事本也可以，我在这里推荐Visual Studio Code这个轻量的软件，编写博客也可以用它。 打开_config.yml这个文件找到最下面 1234# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: &#39;&#39; 修改如下 1234deploy: type: git repo: 前面让大家保存好的的链接用的github就复制github的用的gitee的就复制gitee的 branch: master 然后用命令提示符，还是在233路径下。输入以下指令安装插件。 1npm install hexo-deployer-git --save 安装完成之后用下面两个指令进行部署。（第一个是生成本地静态文件，第二个是发送到github。） 12hexo ghexo d 部署过程中可能会提示让你登录github ，直接输入注册的账号和密码就好了。如果通过github的部署的话，直接通过域名【你的用户名.github.io】访问即可。 如果是通过gitee（码云）还需要登录码云。找到自己的仓库，在服务下的gitee pages选项。 点击启动 且每次部署都需要来这里更新一下。 3.博客主题的安装及修改打开hexo官网 这一部分我放在视频里讲解吧。插图太麻烦了。教程到此结束","categories":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Blog","slug":"Blog","permalink":"http://yoursite.com/tags/Blog/"}]},{"title":"我的博客可算是搭建成功了","slug":"心得","date":"2020-03-07T08:38:32.000Z","updated":"2020-04-07T12:31:39.474Z","comments":true,"path":"posts/a048aafa.html","link":"","permalink":"http://yoursite.com/posts/a048aafa.html","excerpt":"博客的初构建从最初的想法，到后来的实践，到后来的搭建完成。历时两天，共28个小时。艰辛坎坷啊，好在这是之前搭建服务器有着一点linux基本常识啊。确实不是专业学前端的，搞起来还头疼。我这个人学东西还喜欢从原理学起，Double的精力啊。看到标题搭建二字就知道事情不简单啊。 博客的部署及内容的排版布局其实我个认为搭建博客本身还不是最难的，最难的应该还是界面ui的布局了。hexo博客刚搭起来的时候可以说是相当简洁，甚至可以说是凄惨了。默认的排版布局自然是不可能直接拿过来应","text":"博客的初构建从最初的想法，到后来的实践，到后来的搭建完成。历时两天，共28个小时。艰辛坎坷啊，好在这是之前搭建服务器有着一点linux基本常识啊。确实不是专业学前端的，搞起来还头疼。我这个人学东西还喜欢从原理学起，Double的精力啊。看到标题搭建二字就知道事情不简单啊。 博客的部署及内容的排版布局其实我个认为搭建博客本身还不是最难的，最难的应该还是界面ui的布局了。hexo博客刚搭起来的时候可以说是相当简洁，甚至可以说是凄惨了。默认的排版布局自然是不可能直接拿过来应用，这时候还需要去hexo的模板库挑选合适的模板，定下模板之后就避免不了对其内容的修改，其实搭建博客和搭建网站的操作已经很相似了。所以在修改元素时候难免要用到亿点点前端知识，从html到css到js基本上都是成套出现的，甚至一些评论模块，字数统计等等相关模块的配置，都是一个繁琐的过程。好在可以在github上与相关的开发者进行交流。 搭建成功之后你以为搭建成功之后就可以为所欲为了吗，Naive！ 博客的书写当然不是直接用word打字就完事了，现在博客的文本编辑模式基本上还是基于markdown的，其实就书写本身来说markdown确实是一个挺好用的语言，不用体会去排版的烦恼的，可以纯粹的集中精力去对内容进行编排，但是上手起来确实是需要一个适应的时间的。有一说一嗷，当你真正去使用markdown去编辑内容的话，你一定会爱上他的。 总结这两天完全投入到博客的搭建上去了，自己的很多计划安排被打乱，估计又是几个不眠夜啊。当日事，当日毕，还是要紧遵的。 目前的最首要任务还是手头opencv的一个图像识别的算法，以及之前落下的功课需要追回，同时计算机等级考试和四六级还不能放下，我当时为什么犯二计算机报了三科呢，得回这波疫情托一手。最近又在组织学校的电赛。还有很多的相关事宜，分身乏术啊。 之后我可能会趁热抓紧出一个搭建博客的教程，真·带你从零基础搭建博客。哈哈哈哈哈哈哈哈哈绝对真，我就是零基础。 之前还答应要出一个搭建服务器的教程，哎呦，我想想都头疼。看吧 争取这个月之内完事hhhhhhhhh。 可以看到页面的排版布局还是比较生疏，确实还需要适应的过程吧。感觉要不是学校的论文需要用word格式，完全可以用markdown来写。 这玩意怎么能多敲几行回车呢。。。。。。。。。。。。。","categories":[{"name":"心得","slug":"心得","permalink":"http://yoursite.com/categories/%E5%BF%83%E5%BE%97/"}],"tags":[{"name":"博客搭建成功的感想","slug":"博客搭建成功的感想","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E7%9A%84%E6%84%9F%E6%83%B3/"}]}]}